(export (version D)
  (design
    (source /home/felixzero/escrocs/CAD/electrical/lidar_board_v2/adapter/adapter.sch)
    (date "mer. 22 d√©c. 2021 13:32:03")
    (tool "Eeschema 5.1.9+dfsg1-1")
    (sheet (number 1) (name /) (tstamps /)
      (title_block
        (title)
        (company)
        (rev)
        (date)
        (source adapter.sch)
        (comment (number 1) (value ""))
        (comment (number 2) (value ""))
        (comment (number 3) (value ""))
        (comment (number 4) (value "")))))
  (components
    (comp (ref J2)
      (value "Edge slot")
      (footprint "custom:Roborock lidar connector")
      (datasheet ~)
      (libsource (lib Connector_Generic) (part Conn_02x06_Odd_Even) (description "Generic connector, double row, 02x06, odd/even pin numbering scheme (row 1 odd numbers, row 2 even numbers), script generated (kicad-library-utils/schlib/autogen/connector/)"))
      (sheetpath (names /) (tstamps /))
      (tstamp 61C32033))
    (comp (ref J1)
      (value "Molex KK")
      (footprint Connector_Molex:Molex_KK-254_AE-6410-06A_1x06_P2.54mm_Vertical)
      (datasheet ~)
      (libsource (lib Connector) (part Conn_01x06_Male) (description "Generic connector, single row, 01x06, script generated (kicad-library-utils/schlib/autogen/connector/)"))
      (sheetpath (names /) (tstamps /))
      (tstamp 61C3356A)))
  (libparts
    (libpart (lib Connector) (part Conn_01x06_Male)
      (description "Generic connector, single row, 01x06, script generated (kicad-library-utils/schlib/autogen/connector/)")
      (docs ~)
      (footprints
        (fp Connector*:*_1x??_*))
      (fields
        (field (name Reference) J)
        (field (name Value) Conn_01x06_Male))
      (pins
        (pin (num 1) (name Pin_1) (type passive))
        (pin (num 2) (name Pin_2) (type passive))
        (pin (num 3) (name Pin_3) (type passive))
        (pin (num 4) (name Pin_4) (type passive))
        (pin (num 5) (name Pin_5) (type passive))
        (pin (num 6) (name Pin_6) (type passive))))
    (libpart (lib Connector_Generic) (part Conn_02x06_Odd_Even)
      (description "Generic connector, double row, 02x06, odd/even pin numbering scheme (row 1 odd numbers, row 2 even numbers), script generated (kicad-library-utils/schlib/autogen/connector/)")
      (docs ~)
      (footprints
        (fp Connector*:*_2x??_*))
      (fields
        (field (name Reference) J)
        (field (name Value) Conn_02x06_Odd_Even))
      (pins
        (pin (num 1) (name Pin_1) (type passive))
        (pin (num 2) (name Pin_2) (type passive))
        (pin (num 3) (name Pin_3) (type passive))
        (pin (num 4) (name Pin_4) (type passive))
        (pin (num 5) (name Pin_5) (type passive))
        (pin (num 6) (name Pin_6) (type passive))
        (pin (num 7) (name Pin_7) (type passive))
        (pin (num 8) (name Pin_8) (type passive))
        (pin (num 9) (name Pin_9) (type passive))
        (pin (num 10) (name Pin_10) (type passive))
        (pin (num 11) (name Pin_11) (type passive))
        (pin (num 12) (name Pin_12) (type passive)))))
  (libraries
    (library (logical Connector)
      (uri /usr/share/kicad/library/Connector.lib))
    (library (logical Connector_Generic)
      (uri /usr/share/kicad/library/Connector_Generic.lib)))
  (nets
    (net (code 1) (name "Net-(J1-Pad6)")
      (node (ref J1) (pin 6)))
    (net (code 2) (name "Net-(J1-Pad5)")
      (node (ref J1) (pin 5))
      (node (ref J2) (pin 9))
      (node (ref J2) (pin 10)))
    (net (code 3) (name "Net-(J2-Pad11)")
      (node (ref J2) (pin 11)))
    (net (code 4) (name "Net-(J2-Pad12)")
      (node (ref J2) (pin 12)))
    (net (code 5) (name "Net-(J1-Pad2)")
      (node (ref J1) (pin 2))
      (node (ref J2) (pin 3))
      (node (ref J2) (pin 4)))
    (net (code 6) (name "Net-(J1-Pad3)")
      (node (ref J2) (pin 6))
      (node (ref J2) (pin 5))
      (node (ref J1) (pin 3)))
    (net (code 7) (name "Net-(J1-Pad4)")
      (node (ref J2) (pin 7))
      (node (ref J2) (pin 8))
      (node (ref J1) (pin 4)))
    (net (code 8) (name "Net-(J1-Pad1)")
      (node (ref J2) (pin 1))
      (node (ref J2) (pin 2))
      (node (ref J1) (pin 1)))))